[general]
accounts = Relex
#accounts = B_Chreekat, Snowdrift
pythonfile=~/.offlineimap/helper.py
#maxsyncaccounts=1
#ui=basic

[mbnames]
enabled = yes
filename = ~/.mutt/mailboxes.rc
header = "mailboxes "
peritem = "+%(accountname)s/%(foldername)s"
sep = " "
footer = "\n"

[Account Relex]
localrepository = RelexLocal
remoterepository = RelexRemote

[Repository RelexLocal]
type = Maildir
localfolders = ~/mail/Relex

[Repository RelexRemote]
type = IMAP
# When I changed language settings, Microsoft internally renamed folders e.g.
# Archive -> Arkiv. When this happened, offlineimap happily recreated Archive on
# the server, which created a totally duplicate folder. Let's prevent that.
createfolders = False
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
remoteuser = Bryan.Richter@relex.fi
remotehost = outlook.office365.com
remoteport = 993
remotepasseval = outlook()
tls_level = tls_secure
ssl_version = tls1_2
folderfilter = lambda f: f in [ 'INBOX'
                              , 'Needs action'
                              , 'Invites'
                              , 'MR Review'
                              , 'INTask'
                              , 'QuickReply'
                              , 'Archive'
                              , 'Sent Items'
                              , 'Junk Email'
                              , 'Drafts'
                              ]

##
##
##

[Account B_Chreekat]
localrepository = B_ChreekatLocal
remoterepository = B_ChreekatRemote
status_backend = sqlite

[Repository B_ChreekatLocal]
type = Maildir
localfolders = ~/Mail/B_Chreekat
nametrans = lambda folder: { 'starred': '[Gmail]/Starred'
                           }.get(folder, folder)

[Repository B_ChreekatRemote]
# This option would be nice, but requires configuring oauth through some various
# bullshit, and i don't feel like doing that right now.
# Default:
#    auth_mechanisms = GSSAPI, XOAUTH2, CRAM-MD5, PLAIN, LOGIN
auth_mechanisms = GSSAPI, CRAM-MD5, PLAIN, LOGIN
type = Gmail
maxconnections = 3
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
remoteuser = b@chreekat.net
# To set the password, do:
# >>> import keyring
# >>> keyring.set_password("gmail", "username", "password")
remotepasseval = get_password("google.com", "b@chreekat.net")
folderfilter = lambda f: f in ['[Gmail]/Starred'
                              ,'recent'
                              ,'@haskell'
                              ,'@upcoming'
                              ,'@waiting_for'
                              ,'INBOX'
                              ]
nametrans = lambda folder: {'[Gmail]/Starred':   'starred'
                           }.get(folder, folder)

##
##
##

[Account Personal]
localrepository = PersonalLocal
remoterepository = PersonalRemote
status_backend = sqlite

[Repository PersonalLocal]
type = Maildir
localfolders = ~/Mail/Personal
nametrans = lambda folder: { 'starred': '[Gmail]/Starred'
                           , 'ALL': '[Gmail]/All Mail'
                           }.get(folder, folder)

[Repository PersonalRemote]
type = Gmail
maxconnections = 3
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
remoteuser = bryan.richter@gmail.com
# To set the password, do:
# >>> import keyring
# >>> keyring.set_password("gmail", "username", "password")
remotepasseval = get_password("gmail", "personal")
folderfilter = lambda f: f in ['[Gmail]/Starred'
                              ,'[Gmail]/All Mail'
                              ,'@upcoming'
                              ,'@waiting_for'
                              ,'INBOX'
                              ]
nametrans = lambda folder: {'[Gmail]/Starred':   'starred'
                           ,'[Gmail]/All Mail': 'ALL'
                           }.get(folder, folder)

##
##
##

[Account Snowdrift]
localrepository = SnowdriftLocal
remoterepository = SnowdriftRemote
status_backend = sqlite

[Repository SnowdriftLocal]
type = Maildir
localfolders= ~/Mail/Snowdrift

[Repository SnowdriftRemote]
type = IMAP
ssl = yes
maxconnections = 3
remotehost = mx1.snowdrift.coop
remoteuser = bryan@snowdrift.coop
remotepasseval = str(get_password("snowdrift", "me"))
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
folderfilter = lambda f: f in ['INBOX', 'starred']
